PROJECT(UpkUtils LANGUAGES C CXX)
CMAKE_MINIMUM_REQUIRED(VERSION 3.12)
IF(COMMAND cmake_policy)
  CMAKE_POLICY(SET CMP0003 NEW)
  CMAKE_POLICY(SET CMP0043 NEW)
ENDIF(COMMAND cmake_policy)

set(CMAKE_CXX_STANDARD 11)
SET(CMAKE_BUILD_TYPE Release)
SET(CMAKE_CXX_FLAGS_RELEASE "-Wall -fexceptions -O2")

ADD_LIBRARY(UpkCommons ModParser.cpp ModScript.cpp UObject.cpp UObjectFactory.cpp UPKInfo.cpp UPKUtils.cpp minilzo.c LzoUtils.cpp UToken.cpp UTokenFactory.cpp UFlags.cpp CustomTFC.cpp)

ADD_EXECUTABLE(CompareUPK CompareUPK.cpp)
ADD_EXECUTABLE(ExtractNameLists ExtractNameLists.cpp)
ADD_EXECUTABLE(FindObjectByOffset FindObjectByOffset.cpp)
ADD_EXECUTABLE(FindObjectEntry FindObjectEntry.cpp)
ADD_EXECUTABLE(MoveExpandFunction MoveExpandFunction.cpp)
ADD_EXECUTABLE(PatchUPK PatchUPK.cpp)
ADD_EXECUTABLE(HexToPseudoCode HexToPseudoCode.cpp)
ADD_EXECUTABLE(UENativeTablesReader UENativeTablesReader.cpp)

TARGET_LINK_LIBRARIES(CompareUPK UpkCommons)
TARGET_LINK_LIBRARIES(ExtractNameLists UpkCommons)
TARGET_LINK_LIBRARIES(FindObjectByOffset UpkCommons)
TARGET_LINK_LIBRARIES(FindObjectEntry UpkCommons)
TARGET_LINK_LIBRARIES(MoveExpandFunction UpkCommons)
TARGET_LINK_LIBRARIES(PatchUPK UpkCommons)
TARGET_LINK_LIBRARIES(HexToPseudoCode UpkCommons)

IF(wxWidgets_USE_MONOLITHIC)
SET(wxWidgets_USE_LIBS mono)
ELSE(wxWidgets_USE_MONOLITHIC)
SET(wxWidgets_USE_LIBS base)
ENDIF(wxWidgets_USE_MONOLITHIC)

FIND_PACKAGE(wxWidgets)
IF(wxWidgets_FOUND)
  INCLUDE(${wxWidgets_USE_FILE})
  ADD_EXECUTABLE(DeserializeAll DeserializeAll.cpp)
  ADD_EXECUTABLE(DecompressLZO DecompressLZO.cpp)
  ADD_EXECUTABLE(ExportTexturesToDDS ExportTexturesToDDS.cpp dds.cpp)
  ADD_EXECUTABLE(ImportTexturesFromDDS ImportTexturesFromDDS.cpp dds.cpp)
  TARGET_LINK_LIBRARIES(DeserializeAll UpkCommons ${wxWidgets_LIBRARIES})
  TARGET_LINK_LIBRARIES(DecompressLZO UpkCommons ${wxWidgets_LIBRARIES})
  TARGET_LINK_LIBRARIES(ExportTexturesToDDS UpkCommons ${wxWidgets_LIBRARIES})
  TARGET_LINK_LIBRARIES(ImportTexturesFromDDS UpkCommons ${wxWidgets_LIBRARIES})
ELSE(wxWidgets_FOUND)
  MESSAGE("wxWidgets not found!")
ENDIF(wxWidgets_FOUND)
